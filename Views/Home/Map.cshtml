
@{
	ViewData["Title"] = "Map";
}
<header>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js"></script>
	<link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
		  integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY=" crossorigin="" />
	<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
			integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo=" crossorigin=""></script>
	<style>
		#map {
			width: 100%;
			height: 700px;
		}

		.legend {
			background: white;
			padding: 10px;
			border-radius: 5px;
			box-shadow: 0 0 15px rgba(0, 0, 0, 0.2);
			font-size: 14px;
			line-height: 18px;
			color: #555;
		}

		.legend i {
			width: 18px;
			height: 18px;
			float: left;
			margin-right: 8px;
			opacity: 0.7;
		}

	</style>
</header>
<div>

	<h2>Interactive Map</h2>
	<p>Hello from our View Template!</p>
	<div id="map">
	</div>

</div>


@section Scripts {

	<script>
		//BaseMap
		var map = L.map('map').setView([45.5119, -73.6774], 11);

		L.tileLayer('https:tile.openstreetmap.org/{z}/{x}/{y}.png', {
			attribution: '&copy; <a href="https:www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
		}).addTo(map);

		const ecoterritoireLayer = L.layerGroup();
		const humideLayer = L.layerGroup();
		const coyoteLayer = L.layerGroup();

		//EcoTerritoire Data
		$.ajax({
			url: "/Ecoterritoire/GetEcoterritoires",
			dataType: "json",
			success: 
			function(ecoData) {
				function onEachFeature(feature, layer) {
					if (feature.properties && feature.properties.Description) {
						layer.bindPopup('Id: ' + feature.properties.Id + '</br>' + 'Descr: ' + feature.properties.Description);
					}
				}
				function polystyle(polygon) {
					return {
						fillColor: 'green',
						weight: 2,
						opacity: 1,
						color: 'green',
						fillOpacity: 0.5
					};
				}
				
				L.geoJSON(ecoData, {
					style: polystyle,
					onEachFeature: onEachFeature
				}).addTo(ecoterritoireLayer);

				ecoterritoireLayer.addTo(map);

			},
			error: function(req, err) {
				console.log('Error: ' + err);
				console.log(req.responseText);
			}
		});

		//Humide Data
		$.ajax({
			url: "/Humide/GetMilieuxHumides",
			dataType: "json",
			success:
			function(humideData) {
				function onEachFeatureHumide(feature, layer) {
					if (feature.properties && feature.properties.MhId) {
						layer.bindPopup('Id: ' + feature.properties.Id + '</br>' + 'Type: ' + feature.properties.mh_type_dv);
					}
				}
				function polystyleHumide(polygon) {
				return {
					fillColor: 'blue',
					weight: 2,
					opacity: 1,
					color: 'blue',
					fillOpacity: 0.5
				};
			}

				L.geoJSON(humideData, {
					onEachFeature: onEachFeatureHumide,
					style: polystyleHumide
				}).addTo(humideLayer);

				humideLayer.addTo(map);
			},
			error: function(req, err) {
				console.log('Error: ' + err);
				console.log(req.responseText);
			}
		});

		//Coyote Data
		$.ajax({
			url: "/Signale/GetSignalementsCoyotes",
			dataType: "json",
			success: 
			function (sigData) {
				function onEachFeatureCoyote(feature, layer) {
					if (feature.properties && feature.properties.Area) {
						layer.bindPopup(feature.properties.Area);
					}
				}

				function pointstyle(feature) {
								return {
									radius: 6,
									fillColor: "#f52b00",
									color: "#000",
									weight: 1,
									opacity: 1,
									fillOpacity: 0.8
								};
							}

				L.geoJSON(sigData, {
					onEachFeature: onEachFeatureCoyote,
					pointToLayer: function (feature, latlng) {
						return L.circleMarker(latlng, pointstyle(feature));
					},
					
				}).addTo(coyoteLayer);

				coyoteLayer.addTo(map); 

			},
			error: function (req, err) {
				console.log("Error: " + err);
				console.log(req.responseText);
			}
		});


		//Layer Control
		const baseLayers = {};
		const overlays = {
			"EcoTerritoire": ecoterritoireLayer,
			"Milieux Humides": humideLayer,
			"Signalement Coyote": coyoteLayer
		};

		L.control.layers(baseLayers, overlays).addTo(map);

		//Legend
		const legend = L.control({ position: "bottomright" });
		legend.onAdd = function (map) {
			const div = L.DomUtil.create("div", "legend");
			div.innerHTML += "<i style='background: green'></i> EcoTerritoire<br>";
			div.innerHTML += "<i style='background: blue'></i> Milieux Humides<br>";
			div.innerHTML += "<i style='background: #f52b00'></i> Signalement Coyote<br>";
			return div;
		};
		legend.addTo(map);


	</script>
}